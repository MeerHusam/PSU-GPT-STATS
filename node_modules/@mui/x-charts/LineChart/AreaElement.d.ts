import * as React from 'react';
import { HighlightScope } from '../context/HighlightProvider';
export interface AreaElementClasses {
    /** Styles applied to the root element. */
    root: string;
    /** Styles applied to the root element when higlighted. */
    highlighted: string;
    /** Styles applied to the root element when faded. */
    faded: string;
}
export type AreaElementClassKey = keyof AreaElementClasses;
export interface AreaElementOwnerState {
    id: string;
    color: string;
    isFaded: boolean;
    isHighlighted: boolean;
    classes?: Partial<AreaElementClasses>;
}
export declare function getAreaElementUtilityClass(slot: string): string;
export declare const areaElementClasses: AreaElementClasses;
export type AreaElementProps = Omit<AreaElementOwnerState, 'isFaded' | 'isHighlighted'> & React.ComponentPropsWithoutRef<'path'> & {
    highlightScope?: Partial<HighlightScope>;
};
declare function AreaElement(props: AreaElementProps): React.JSX.Element;
declare namespace AreaElement {
    var propTypes: any;
}
export { AreaElement };
