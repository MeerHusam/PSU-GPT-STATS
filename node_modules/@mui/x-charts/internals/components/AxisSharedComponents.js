"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TickLabel = exports.Tick = exports.Line = exports.Label = exports.AxisRoot = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _styles = require("@mui/material/styles");
var _axisClasses = require("../../ChartsAxis/axisClasses");
const AxisRoot = (0, _styles.styled)('g', {
  name: 'MuiChartsAxis',
  slot: 'Root',
  overridesResolver: (props, styles) => styles.root
})({
  [`&.${_axisClasses.axisClasses.directionY}`]: {
    [`.${_axisClasses.axisClasses.tickLabel}`]: {
      alignmentBaseline: 'middle'
    },
    [`.${_axisClasses.axisClasses.label}`]: {
      alignmentBaseline: 'baseline',
      textAnchor: 'middle'
    }
  },
  [`&.${_axisClasses.axisClasses.left}`]: {
    [`.${_axisClasses.axisClasses.tickLabel}`]: {
      alignmentBaseline: 'central',
      textAnchor: 'end'
    }
  },
  [`&.${_axisClasses.axisClasses.right}`]: {
    [`.${_axisClasses.axisClasses.tickLabel}`]: {
      alignmentBaseline: 'central',
      textAnchor: 'start'
    }
  },
  [`&.${_axisClasses.axisClasses.bottom}`]: {
    [`.${_axisClasses.axisClasses.tickLabel}, .${_axisClasses.axisClasses.label}`]: {
      alignmentBaseline: 'hanging',
      textAnchor: 'middle'
    }
  },
  [`&.${_axisClasses.axisClasses.top}`]: {
    [`.${_axisClasses.axisClasses.tickLabel}, .${_axisClasses.axisClasses.label}`]: {
      alignmentBaseline: 'baseline',
      textAnchor: 'middle'
    }
  }
});
exports.AxisRoot = AxisRoot;
const Line = (0, _styles.styled)('line', {
  name: 'MuiChartsAxis',
  slot: 'Line',
  overridesResolver: (props, styles) => styles.line
})(({
  theme
}) => ({
  stroke: theme.palette.text.primary,
  shapeRendering: 'crispEdges',
  strokeWidth: 1
}));
exports.Line = Line;
const Tick = (0, _styles.styled)('line', {
  name: 'MuiChartsAxis',
  slot: 'Tick',
  overridesResolver: (props, styles) => styles.tick
})(({
  theme
}) => ({
  stroke: theme.palette.text.primary,
  shapeRendering: 'crispEdges'
}));
exports.Tick = Tick;
const TickLabel = (0, _styles.styled)('text', {
  name: 'MuiChartsAxis',
  slot: 'TickLabel',
  overridesResolver: (props, styles) => styles.tickLabel
})(({
  theme
}) => (0, _extends2.default)({}, theme.typography.caption, {
  fill: theme.palette.text.primary
}));
exports.TickLabel = TickLabel;
const Label = (0, _styles.styled)('text', {
  name: 'MuiChartsAxis',
  slot: 'Label',
  overridesResolver: (props, styles) => styles.label
})(({
  theme
}) => (0, _extends2.default)({}, theme.typography.body1, {
  fill: theme.palette.text.primary
}));
exports.Label = Label;