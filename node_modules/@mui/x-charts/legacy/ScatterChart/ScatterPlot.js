import * as React from 'react';
import { Scatter } from './Scatter';
import { SeriesContext } from '../context/SeriesContextProvider';
import { CartesianContext } from '../context/CartesianContextProvider';
import { jsx as _jsx } from "react/jsx-runtime";
export function ScatterPlot() {
  var seriesData = React.useContext(SeriesContext).scatter;
  var axisData = React.useContext(CartesianContext);
  if (seriesData === undefined) {
    return null;
  }
  var series = seriesData.series,
    seriesOrder = seriesData.seriesOrder;
  var xAxis = axisData.xAxis,
    yAxis = axisData.yAxis,
    xAxisIds = axisData.xAxisIds,
    yAxisIds = axisData.yAxisIds;
  var defaultXAxisId = xAxisIds[0];
  var defaultYAxisId = yAxisIds[0];
  return /*#__PURE__*/_jsx(React.Fragment, {
    children: seriesOrder.map(function (seriesId) {
      var _series$seriesId = series[seriesId],
        id = _series$seriesId.id,
        xAxisKey = _series$seriesId.xAxisKey,
        yAxisKey = _series$seriesId.yAxisKey,
        markerSize = _series$seriesId.markerSize,
        color = _series$seriesId.color;
      var xScale = xAxis[xAxisKey != null ? xAxisKey : defaultXAxisId].scale;
      var yScale = yAxis[yAxisKey != null ? yAxisKey : defaultYAxisId].scale;
      return /*#__PURE__*/_jsx(Scatter, {
        xScale: xScale,
        yScale: yScale,
        color: color,
        markerSize: markerSize != null ? markerSize : 4,
        series: series[seriesId]
      }, id);
    })
  });
}